## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Task Management'
description: |-

  APIs for managing tasks
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Tasks'
      description: 'Fetches all tasks with optional filtering and sorting.'
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The bearer token used to authenticate the request. Example: Bearer your_token_here'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search_value:
        name: search_value
        description: 'Optional search term to filter tasks.'
        required: false
        example: high
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_by:
        name: sort_by
        description: 'Optional column to sort by.'
        required: false
        example: due_date
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'Optional sort order (asc or desc).'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search_value: high
      sort_by: due_date
      sort_order: asc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "Buy groceries",
                "priority": "high",
                "due_date": "2025-01-15"
              },
              {
                "id": 2,
                "title": "Complete assignment",
                "priority": "medium",
                "due_date": "2025-01-20"
              }
            ],
            "message": "Tasks retrieved successfully",
            "status": 200
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Single Task'
      description: 'Fetches a single task by its ID.'
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The bearer token used to authenticate the request. Example: Bearer your_token_here'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "title": "Buy groceries",
              "description": "Purchase milk, bread, and eggs.",
              "priority": "high",
              "due_date": "2025-01-15"
            },
            "message": "Task retrieved successfully",
            "status": 200
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Task'
      description: 'Creates a new task with the provided details.'
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The bearer token used to authenticate the request. Example: Bearer your_token_here'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task.'
        required: true
        example: 'Buy groceries'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: false
        example: 'Purchase milk, bread, and eggs.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-01-11T09:04:29'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'The priority of the task (low, medium, high).'
        required: false
        example: high
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Buy groceries'
      description: 'Purchase milk, bread, and eggs.'
      due_date: '2025-01-11T09:04:29'
      priority: high
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Task created successfully",
            "status": 201
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Task Api'
      description: 'Updates an existing task by ID.'
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The bearer token used to authenticate the request. Example: Bearer your_token_here'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The new title of the task.'
        required: false
        example: 'Buy groceries'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The new description of the task.'
        required: false
        example: 'Update shopping list.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-01-11T09:04:29'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'The new priority of the task (low, medium, high).'
        required: false
        example: medium
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Buy groceries'
      description: 'Update shopping list.'
      due_date: '2025-01-11T09:04:29'
      priority: medium
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Task updated successfully",
            "data": {
                "id": 1,
                "title": "Buy groceries",
                "description": "Update shopping list",
                "priority": "medium",
                "due_date": "2025-01-15"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Task'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The bearer token used to authenticate the request. Example: Bearer your_token_here'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Task deleted successfully",
            "status": 200
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
